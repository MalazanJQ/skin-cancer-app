from flask import Flask, request, jsonify
import cv2
import numpy as np
import onnxruntime as rt
from flask_cors import CORS

HEIGHT = 300
WIDTH = 300
MEAN = np.array([138.59368974, 144.15611658, 182.05335672])
STD_DEV = np.array([57.58242606, 53.78604796, 55.97474568])

app = Flask(__name__)
CORS(app)

model_path = "./model_c.onnx"
session = rt.InferenceSession(model_path)


def preprocess(image):
    image = cv2.resize(image, (HEIGHT, WIDTH))
    image_array = np.array(image).astype(np.float32)
    image_array = (image_array - MEAN) / STD_DEV
    image_array = np.transpose(image_array, (2, 0, 1))
    image_tensor = np.expand_dims(image_array, axis=0)
    return image_tensor


@app.route('/upload', methods=['POST'])
def upload():
    file = request.files['file']
    file_bytes = np.frombuffer(file.read(), np.uint8)
    image = preprocess(cv2.imdecode(file_bytes, cv2.IMREAD_COLOR))

    input_name = session.get_inputs()[0].name
    output_name = session.get_outputs()[0].name

    output = session.run([output_name], {input_name: image})[0]
    probabilities = output[0]
    benign = probabilities[0]
    malignant = probabilities[1]
    prediction = "benign" if benign > malignant else "malignant"
    return jsonify({"prediction": prediction, "benign": benign, "malignant": malignant})


if __name__ == "__main__":
    app.run(debug=True)